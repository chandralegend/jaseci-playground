[
    {
        "name": "hello-world.jac",
        "content": "walker init {\n\tstd.out('Hello World!');\n}",
        "language": "jaseci"
    },
    {
        "name": "inventory.jac",
        "content": "node product {\n    has name;\n    has stock = 0;\n\n    can check with inventory entry {\n        visitor.products[here.name] = here.stock;\n    }\n\n    can stock_up with purchase entry {\n        here.stock += visitor.purchase_amount;\n        std.log(\"Stock for \" + here.name + \" up to \" + (here.stock).str);\n    }\n\n    can stock_down with sell entry {\n        if(here.stock >= visitor.sell_amount) {\n            here.stock -= visitor.sell_amount;\n            std.log(\"Selling \" + here.name + \": \" + (visitor.sell_amount).str);\n            std.log(\"Remaining stock: \" + (here.stock).str);\n        } else {\n            std.log(\"Not enough stock for \" + here.name);\n        }\n    }\n\n}\n\nnode product_catalog;\n\nedge category {\n    has name;\n}\n\ngraph shop {\n    has anchor catalog;\n    spawn {\n        catalog = spawn node::product_catalog;\n\n        apple = spawn node::product(name=\"apple\");\n        catalog +[category(name=\"fruit\")]+> apple;\n\n        banana = spawn node::product(name=\"banana\");\n        catalog +[category(name=\"fruit\")]+> banana;\n\n        notebook = spawn node::product(name=\"notebook\");\n        catalog +[category(name=\"supplies\")]+> notebook;\n    }\n}\n\nwalker inventory {\n    has products = {};\n    root: take --> node::product_catalog;\n    product_catalog: take --> node::product;\n\n    with exit {\n        report products;\n    }\n}\n\nwalker purchase {\n    has product_category, product_name, purchase_amount;\n    root: take --> node::product_catalog;\n    product_catalog {\n        take -[category(name==product_category)]-> node::product(name==product_name) else {\n            new_product = spawn node::product(name=product_name);\n            here +[category(name=product_category)]+> new_product;\n            take new_product;\n            std.log(\"New product: \" + product_name);\n        }\n    }\n}\n\nwalker sell {\n    has product_category, product_name, sell_amount;\n    root: take --> node::product_catalog;\n    product_catalog {\n        take -[category(name==product_category)]-> node::product(name==product_name) else {\n            std.log(\"Sorry. We don't sell this product.\");\n        }\n    }\n}\n\nwalker init {\n    root: spawn here ++> graph::shop;\n\n    spawn here walker::purchase(product_category=\"fruit\", product_name=\"apple\", purchase_amount=10);\n    spawn here walker::purchase(product_category=\"fruit\", product_name=\"banana\", purchase_amount=20);\n    spawn here walker::purchase(product_category=\"supplies\", product_name=\"notebook\", purchase_amount=5);\n    spawn here walker::inventory;\n\n    spawn here walker::sell(product_category=\"fruit\", product_name=\"apple\", sell_amount=5);\n    spawn here walker::sell(product_category=\"fruit\", product_name=\"banana\", sell_amount=10);\n    spawn here walker::sell(product_category=\"supplies\", product_name=\"notebook\", sell_amount=2);\n    spawn here walker::inventory;\n}",
        "language": "jaseci"
    }
]